name: Check Website Status

on:
  schedule:
    - cron: '*/1 * * * *'  # 每分钟执行一次

jobs:
  check-status:
    runs-on: ubuntu-latest
    steps:
      - name: Fetch Website Status
        id: fetch_status
        run: |
          # 使用 -L 选项跟随跳转
          response=$(curl -s -o /dev/null -w "%{http_code} %{url_effective}" -L "https://example.com")
          status_code=$(echo "$response" | awk '{print $1}')
          final_url=$(echo "$response" | awk '{print $2}')
          headers=$(curl -s -I -L "https://example.com" | tr '\n' ';')
          echo "::set-output name=status_code::$status_code"
          echo "::set-output name=final_url::$final_url"
          echo "::set-output name=headers::$headers"

      - name: Send to DingTalk
        run: |
          status_code="${{ steps.fetch_status.outputs.status_code }}"
          final_url="${{ steps.fetch_status.outputs.final_url }}"
          headers="${{ steps.fetch_status.outputs.headers }}"
          webhook_url="https://oapi.dingtalk.com/robot/send?access_token=你的access_token"
          title="网页监控"
          summary="状态码：$status_code; 最终网址：$final_url; 概要：$headers"

          if [[ "$status_code" != "200" && "$status_code" != "301" && "$status_code" != "302" ]]; then
            summary="错误：返回状态码 $status_code; 概要：$headers"
          fi

          curl -X POST "$webhook_url" \
            -H 'Content-Type: application/json' \
            -d "{\"msgtype\": \"markdown\", \"markdown\": {\"title\": \"$title\", \"text\": \"$summary\"}}"
